{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","i","handleToggle","handleDelete","className","onClick","desc","TodoList","todos","TodoAdd","handleAddTodo","initialState","useState","formValues","setFormValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.284b2637.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload]\r\n\r\n        case 'delete':\r\n            return state.filter((todo) => todo.id !== action.payload)\r\n\r\n        case 'toggle':\r\n            return state.map((todo) =>\r\n                todo.id === action.payload\r\n                    ? { ...todo, done: !todo.done }\r\n                    : todo\r\n            )\r\n\r\n        case 'toggle-if':\r\n            return state.map((todo) => {\r\n                if (todo.id === action.payload) {\r\n                    return { ...todo, done: !todo.done }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst TodoListItem = ({ todo, i, handleToggle, handleDelete }) => {\r\n    return (\r\n        <li className='list-group-item'>\r\n            <p\r\n                className={`${todo.done && 'text-decoration-line-through'}`}\r\n                onClick={() => {\r\n                    handleToggle(todo.id)\r\n                }}\r\n            >\r\n                {i + 1} {todo.desc}\r\n            </p>\r\n            <button\r\n                className='btn btn-outline-danger'\r\n                onClick={() => {\r\n                    handleDelete(todo.id)\r\n                }}\r\n            >\r\n                delete\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport TodoListItem from './TodoListItem'\r\n\r\nconst TodoList = ({ todos, handleToggle, handleDelete }) => {\r\n    return (\r\n        <ul className='list-group list-group-flush'>\r\n            {todos.map((todo, i) => {\r\n                return (\r\n                    <TodoListItem\r\n                        todo={todo}\r\n                        key={todo.id}\r\n                        i={i}\r\n                        handleToggle={handleToggle}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nconst TodoAdd = ({ handleAddTodo }) => {\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: '',\r\n    })\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (description.trim().length < 1) return\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false,\r\n        }\r\n\r\n        handleAddTodo(newTodo)\r\n        reset()\r\n    }\r\n    return (\r\n        <>\r\n            <h4>add new task</h4>\r\n            <hr />\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className='form-control mb-2'\r\n                    type='text'\r\n                    name='description'\r\n                    placeholder='task description'\r\n                    autoComplete='off'\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button className='form-control btn btn-outline-success'>\r\n                    add\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoAdd\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [formValues, setFormValues] = useState(initialState)\r\n    const reset = () => {\r\n        setFormValues(initialState)\r\n    }\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    return [formValues, handleInputChange, reset]\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer'\r\nimport './reducer.css'\r\nimport TodoList from './TodoList'\r\nimport TodoAdd from './TodoAdd'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || []\r\n}\r\n\r\nconst TodoApp = () => {\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    const handleDelete = (todoId) => {\r\n        dispatch({ type: 'delete', payload: todoId })\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId,\r\n        })\r\n    }\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        dispatch({ type: 'add', payload: newTodo })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>\r\n                my tasks: <small>{todos.length}</small>\r\n            </h2>\r\n            <hr />\r\n            <div className='row'>\r\n                <div className='col-7'>\r\n                    <TodoList\r\n                        todos={todos}\r\n                        handleToggle={handleToggle}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                </div>\r\n                <div className='col-5'>\r\n                    <TodoAdd handleAddTodo={handleAddTodo} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoApp from './components/08-useReducer/TodoApp'\n// import CallBackHook from './components/06-memos/CallBackHook'\n// import { Parent } from './components/07-tasks-memo/Parent'\n// import CounterApp from './components/01-useState/CounterApp'\n// import CounterWithCustomHook from './components/01-useState/CounterWithCustomHook'\n// import SimpleForm from './components/02-useEffect/SimpleForm'\n// import FormWithCustomHook from './components/02-useEffect/FormWithCustomHook'\n// import MultipleCustomHooks from './components/03-examples/MultipleCustomHooks'\n// import FocusScreen from './components/04-useRef/FocusScreen'\n// import RealExampleRef from './components/04-useRef/RealExampleRef'\n// import Layout from './components/05-useLayoutEffect/Layout'\n// import Memorize from './components/06-memos/Memorize'\n// import MemoHook from './components/06-memos/MemoHook'\n// import HookApp from './HookApp'\n\nReactDOM.render(\n    <>\n        <TodoApp />\n    </>,\n    document.getElementById('root')\n)\n// import './components/08-useReducer/intro-reducer'\n"],"sourceRoot":""}